# Generated by Django 4.0.1 on 2024-04-16 15:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chatting',
            fields=[
                ('chat_id', models.AutoField(primary_key=True, serialize=False)),
                ('chat_content', models.CharField(max_length=50)),
                ('donation', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'chatting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FixedChatting',
            fields=[
                ('chat_room_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'fixed_chatting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordedVideo',
            fields=[
                ('video_id', models.AutoField(primary_key=True, serialize=False)),
                ('video_is_public', models.IntegerField()),
                ('videoplay', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'recorded_video',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StreamingRoom',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=50)),
                ('room_age_limit', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'streaming_room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_username', models.CharField(max_length=20)),
                ('user_password', models.CharField(max_length=64)),
                ('user_nickname', models.CharField(max_length=20)),
                ('user_registered_date', models.DateTimeField()),
                ('user_isregistered', models.IntegerField()),
                ('user_leave_date', models.DateTimeField()),
                ('user_photo', models.CharField(blank=True, max_length=200, null=True)),
                ('user_introduction', models.CharField(blank=True, max_length=150, null=True)),
                ('user_donated', models.PositiveIntegerField(blank=True, null=True)),
                ('user_choco', models.PositiveIntegerField(blank=True, null=True)),
                ('user_subscriber_count', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Viewer',
            fields=[
                ('viewer_id', models.AutoField(primary_key=True, serialize=False)),
                ('viewer_isliked', models.IntegerField()),
                ('isblocked', models.IntegerField()),
                ('isadmin', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'viewer',
                'managed': False,
            },
        ),
    ]
